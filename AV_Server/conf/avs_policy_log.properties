# ------------定义rootCategory的属性---------------------------
# 指定rootCategory的log优先级是ERROR，其Appender可以同时有多个，注释掉例子分别是console, file, roll
# EMERG >= FATAL > ALERT > CRIT > ERROR > WARN > NOTICE > INFO > DEBUG > NOTSET(NULL)，调用日志时分别有同名函数与其一一对应，即
# EMERG(), FATAL() ALERT() CRIT() ERROR() WARN() NOTICE() INFO() DEBUG()
rootCategory=DEBUG, roll
#rootCategory=DEBUG, root, file


# 定义rootCategory的派生类
# 不在父类(rootCategory)中输出
Category.console=DEBUG, console
Category.file=DEBUG, file
Category.roll=DEBUG, roll
additivity.consle=false
additivity.file=false
additivity.roll=false

# ------------定义root的属性--------------------------------
# consoleAppender类型:控制台输出
#下面语句分别表示：appender类型、布局、输出格式
#appender.root=ConsoleAppender
#appender.root.layout=PatternLayout
#appender.root.layout.ConversionPattern=[%d{%Y-%m-%d %H:%M:%S,%l}] [%p] : %m%n


# ------------定义console的属性--------------------------------
# consoleAppender类型:控制台输出
#下面语句分别表示：appender类型、布局、输出格式
#appender.console=ConsoleAppender
#appender.console.layout=PatternLayout
#appender.console.layout.ConversionPattern=[%d{%Y-%m-%d %H:%M:%S,%l}] [%p] : %m%n


#------------定义file的属性-----------------------------------
# FileAppender类型：输出到文件
#下面语句分别表示：appender类型、不覆盖指定文件、优先级、文件名称、布局、输出格式
#appender.file.append=false
#appender.file.threshold=DEBUG
#appender.file.fileName=./file.log
#appender.file.layout=PatternLayout
#appender.file.maxFileSize=1048576
#appender.file.layout.ConversionPattern=[%d{%Y-%m-%d %H:%M:%S,%l}] [%p] : %m%n


#------定义roll的属性--------------------------------
#RollingFileAppender：输出到回卷文件，文件超过一定大小之后生成一个新的文件
#下面语句分别表示：appender类型、不覆盖指定文件、优先级、文件名称、布局，文件自动回滚大小阈值10MB(默认20KB)、可产生文件数量阈值(默认5个)、输出格式
appender.roll=RollingFileAppender
appender.roll.append=true
appender.roll.threshold=DEBUG
appender.roll.fileName=/data/logs/avs_policy_server.log
appender.roll.layout=PatternLayout
appender.roll.maxFileSize=104857600
appender.roll.maxBackupIndex=5
appender.roll.layout.ConversionPattern=[%d{%Y-%m-%d %H:%M:%S,%l}] [%p] [tid=%t]: %m%n
